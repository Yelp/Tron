.TH "TRONCTL" "1" "March 27, 2012" "0.3" "Tron"
.SH NAME
tronctl \- send management commands to jobs and actions within tron
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.SH SYNOPSYS
.sp
\fBtronctl\fP [\fB\-\-server\fP \fIserver_name\fP] [\fB\-\-verbose\fP | \fB\-v\fP] \fIcommand\fP \fI<job_name | job_run_id | action_run_id>\fP
.SH DESCRIPTION
.sp
\fBtronctl\fP is the control interface for tron. Through tronctl you can start,
cancel, succeed, and fail job runs and action runs.
.SH OPTIONS
.INDENT 0.0
.TP
.BI \-\-server\fB= <config\-file>
Config file containing the address of the server the
tron instance is running on
.TP
.B \-\-verbose
Displays status messages along the way
.TP
.BI \-\-run\-date\fB= <YYYY\-MM\-DD>
For starting a new job, specifies the run date that
should be set. Defaults to today.
.UNINDENT
.SH JOB COMMANDS
.INDENT 0.0
.TP
.B disableall
Disables all jobs
.TP
.B enableall
Enables all jobs
.TP
.B disable <job_name>
Disables the specified job. Cancels all scheduled and queued runs. Doesn\(aqt
schedule any more.
.TP
.B enable <job_name>
Enables the specified job by starting the oldest job that still needs to run
.TP
.B start <job_name>
Creates a new run of the specified job. If no other instance is running, it starts
.TP
.B start <job_run_id>
Tries to start the given job or action run. A Job run only starts if no
other instance is running. If the job has already started, start continues
by retrying failed runs Valid states that you can run "start" on: SCHE,
QUE
.TP
.B start <action_run_id>
Starts the action run regardless of anything else running.  Valid states
that you can run "start" on: SCHE, QUE
.TP
.B restart <job_run_id>
Resets the given Job Run and starts it over.  Valid states that you can run
"restart" on: SCHE, FAIL, QUE, CANC, UNKWN
.TP
.B cancel <job_run_id | action_run_id>
Cancels the specified job run or action run.  Cancelled runs don\(aqt start at
their scheduled time and they are skipped over when there is a job run
queue.  Valid states that you can run "cancel" on: SCHE, QUE
.TP
.B succeed <job_run_id | action_run_id>
Marks the specified job run or action run as succeeded.  This behaves the
same as the run actually completing.  Dependant actions are ran and queued
runs start.  Valid states that you can run "succeed" on: SCHE, QUE, UNKWN,
RUNN
.TP
.B skip <action_run_id>
Marks the specified action run as skipped.  This allows dependant actions
to run. Valid states that you can "skip" on: FAIL
.TP
.B fail <job_run_id | action_run_id>
Marks the specified job run or action run as failed.  This behaves the same
as the job actually failing.  Dependant actions are queued and following
jobs are queued or cancelled Valid states that you can run "fail" on: SCHE,
QUE, UNKWN
.UNINDENT
.SH SERVICE COMMANDS
.INDENT 0.0
.TP
.B start <service name>
Start instances the named service
.TP
.B stop <service name>
Stop instances of the named service
.TP
.B zap <service_id | service_instance_id>
Marks the specified service or service instance as \fBDOWN\fP without
taking any other action (such as actually stopping the service)
.UNINDENT
.SH EXAMPLES
.sp
.nf
.ft C
$ tronctl start job0
New Job Run job0.2 created

$ tronctl start job0.3
Job Run job0.3 now in state RUNN

$ tronctl cancel job0.4
Job Run job0.4 now in state CANC

$ tronctl fail job0.4
Job Run job0.4 now in state FAIL

$ tronctl restart job0.4
Job Run job0.4 now in state RUNN

$ tronctl succeed job0.5
Job Run job0.5 now in state SUCC
.ft P
.fi
.SH BUGS
.sp
Post bugs to \fI\%http://www.github.com/yelp/tron/issues\fP.
.SH SEE ALSO
.sp
\fBtrond\fP (8), \fBtronfig\fP (1), \fBtronview\fP (1),
.SH AUTHOR
Yelp, Inc.
.SH COPYRIGHT
2011, Yelp, Inc.
.\" Generated by docutils manpage writer.
.\" 
.
