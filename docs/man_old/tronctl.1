.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH tronctl 1 "July 2010" Linux "User Manuals"
.SH NAME
tronctl \- send management commands to jobs and actions within tron
.SH SYNOPSIS
.B tronctl
.RB "[" "--server "
.IR "server_name" "]"
.RB "[" "--verbose" " | " "-v" "]"
.I "command" "<job_name | job_run_id | action_run_id>"
.SH DESCRIPTION
.B tronctl
is the control interface for tron. Through tronctl you can start,
cancel, succeed, and fail job runs and action runs.
.SH OPTIONS
.IP "--server config-file"
The server the tron instance is running on
.IP --verbose
Displays status messages along the way
.IP --run-date=<YYYY-MM-DD>
For starting a new job, specifies the run date that should be set. Defaults to today.

.SH "JOB COMMANDS"

.IP disableall
Disables all jobs

.IP enableall
Enables all jobs

.IP "disable <job_name>"
Disables the specified job. Cancels all scheduled and queued runs. Doesn't
schedule any more.

.IP "enable <job_name>"
Enables the specified job by starting the oldest job that still needs to run

.IP "start <job_name>"
Creates a new run of the specified job. If no other instance is running, it starts

.IP "start <job_run_id>"
Tries to start the given job or action run. A Job run only starts if no other 
instance is running. If the job has already started, start continues by retrying failed runs
 Valid states that you can run "start" on: SCHE, FAIL, QUE, CANC, UNKWN

.IP "start <action_run_id>"
Starts the action run regardless of anything else running.
 Valid states that you can run "start" on: SCHE, FAIL, QUE, CANC, UNKWN

.IP "restart <job_run_id>"
Resets the given Job Run and starts it over.
 Valid states that you can run "restart" on: SCHE, FAIL, QUE, CANC, UNKWN

.IP "cancel <job_run_id | action_run_id>"
Cancels the specified job run or action run.
Cancelled runs don't start at their scheduled time and
they are skipped over when there is a job run queue. 
 Valid states that you can run "cancel" on: SCHE, QUE

.IP "succeed <job_run_id | action_run_id>"
Marks the specified job run or action run as succeeded.
This behaves the same as the run actually completing.
Dependant actions are ran and queued runs start.
 Valid states that you can run "succeed" on: SCHE, FAIL, QUE, CANC, UNKWN

.IP "fail <job_run_id | action_run_id>"
Marks the specified job run or action run as failed.
This behaves the same as the job actually failing.
Dependant actions are queued and following jobs are queued or cancelled
 Valid states that you can run "fail" on: SCHE, QUE, CANC, UNKWN

.SH "SERVICE COMMANDS"
.IP "start <service name>"
Start instances the named service
.IP "stop <service name>"
Stop instances of the named service

.SH EXAMPLES
Here are a few examples that show the use of tronctl commands

 $ tronctl start job0
 New Job Run job0.2 created

 $ tronctl start job0.3
 Job Run job0.3 now in state RUNN

 $ tronctl cancel job0.4
 Job Run job0.4 now in state CANC

 $ tronctl fail job0.4
 Job Run job0.4 now in state FAIL

 $ tronctl restart job0.4
 Job Run job0.4 now in state RUNN

 $ tronctl succeed job0.5
 Job Run job0.5 now in state SUCC

.SH ENVIRONMENT
.IP SOMEDIR
.SH DIAGNOSTICS
.SH BUGS
Email found bugs to yelplabs@yelp.com
.SH AUTHOR
Rhett Garber
.SH "SEE ALSO"
.BR trond (8),
.BR tronview (1),
.BR tronfig (1),

