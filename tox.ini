[tox]
envlist = py36

[testenv]
basepython=python3.6
deps =
    --requirement={toxinidir}/requirements.txt
    --requirement={toxinidir}/requirements-dev.txt
usedevelop = true
passenv = USER
commands =
    py.test -s {posargs:tests}
    pre-commit install -f --install-hooks
    pre-commit run --all-files

[flake8]
ignore = E501,E265,E241,E704,E251,W504

[testenv:docs]
deps =
    --requirement={toxinidir}/requirements-docs.txt
whitelist_externals=
    dot
    mkdir
commands=
    mkdir -p docs
    sphinx-build -b html -d docs/_build docs docs/_build/html

[testenv:example-cluster]
whitelist_externals=docker-compose
deps=
    docker-compose
commands=
    docker-compose -f example-cluster/docker-compose.yml build playground
    docker-compose -f example-cluster/docker-compose.yml run -p 8089:8089 playground
    docker-compose -f example-cluster/docker-compose.yml down

[testenv:itest]
commands =
    make deb_trusty
    make _itest_trusty

[testenv:cluster_itests]
changedir=cluster_itests/
passenv = DOCKER_TLS_VERIFY DOCKER_HOST DOCKER_CERT_PATH
whitelist_externals =
    /bin/bash
deps =
    docker-compose
commands =
    docker-compose down
    docker-compose build
    docker-compose up -d mesosmaster mesosslave tronmaster
    bash -c "docker-compose run --rm tronmaster tox -i {env:PIP_INDEX_URL:https://pypi.python.org/simple} -e tron_itests_inside_container -- --no-capture {posargs} || (docker-compose logs && exit 1)"
    docker-compose stop
    docker-compose rm --force

[testenv:tron_itests_inside_container]
basepython = python3.6
changedir=cluster_itests/
deps =
    {[testenv]deps}
    behave==1.2.5
whitelist_externals =
    /bin/mkdir
commands =
    # TODO: upgrade behave if they ever take this reasonable PR
    pip install git+git://github.com/asottile/behave@issue_533
    behave {posargs}

[testenv:trond_inside_container]
basepython = python3.6
deps = {[testenv]deps}
commands =
    trond --debug -c /work/cluster_itests/config/ -l /work/example-cluster/logging.conf -H 0.0.0.0
